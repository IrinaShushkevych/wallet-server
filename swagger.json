{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.0",
    "title": "Wallet-API",
    "description": "GO IT Project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://localhost:3001" }],
  "tags": [
    {
      "name": "User",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["User"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "User info",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "User is logged out",
            "content": {}
          },
          "401": {
            "description": "Not authorized.",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "History of transactions",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer",
            "description": "How page you need"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer",
            "description": "How transactions you need"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Add transaction",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Transaction object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error creating transacrion.",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token.",
            "content": {}
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get statistic per month by existing categories",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "Year for statisctic"
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "Month for statisctic"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "code": {
                      "type": "number",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "number",
                      "example": "500"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/categories/{type}": {
      "get": {
        "tags": ["Categories"],
        "security": [{ "Bearer": [] }],
        "summary": "Get categories",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "type": "string",
            "description": "Type of categories"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "code": {
                      "type": "number",
                      "example": "401"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Fail"
                    },
                    "code": {
                      "type": "number",
                      "example": "500"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password", "username"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minlength": 3,
            "maxlength": 100
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty12345",
            "minlength": 6,
            "maxlength": 36
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "minlength": 2,
            "maxlength": 36,
            "example": "Adam"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "minlength": 3,
              "maxlength": 100
            },
            "userName": {
              "type": "string",
              "description": "User name",
              "example": "Adam"
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com",
            "userName": "Adam"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minlength": 3,
            "maxlength": 100
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty12345",
            "minlength": 6,
            "maxlength": 36
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "minlength": 3,
              "maxlength": 100
            },
            "userName": {
              "type": "string",
              "description": "User name",
              "example": "Adam"
            },
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "213jhjhu2h132h7eh27h71h"
            }
          }
        },
        "example": {
          "user": {
            "email": "user@example.com",
            "userName": "Adam"
          },
          "token": "213jhjhu2h132h7eh27h71h"
        }
      },
      "NewTransactionResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id of transaction",
              "example": "62536hghgdhg"
            },
            "date": {
              "type": "string",
              "description": "Date of transaction",
              "example": "20.12.19"
            },
            "income": {
              "type": "boolean",
              "description": "Type of transaction",
              "example": false
            },
            "category": {
              "type": "string",
              "description": "Category of transaction",
              "example": "Products"
            },
            "comment": {
              "type": "string",
              "description": "Comment of transaction",
              "example": "Products for home"
            },
            "sum": {
              "type": "number",
              "description": "Sum of transaction",
              "example": 500
            },
            "balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 8500
            }
          }
        },
        "example": {
          "transaction": {
            "_id": {
              "type": "string",
              "description": "Id of transaction",
              "example": "62536hghgdhg"
            },
            "date": {
              "type": "string",
              "description": "Date of transaction",
              "example": "20.12.19"
            },
            "income": {
              "type": "boolean",
              "description": "Type of transaction",
              "example": false
            },
            "category": {
              "type": "string",
              "description": "Category of transaction",
              "example": "Products"
            },
            "comment": {
              "type": "string",
              "description": "Comment of transaction",
              "example": "Products for home"
            },
            "sum": {
              "type": "number",
              "description": "Sum of transaction",
              "example": 500
            },
            "balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 8500
            }
          }
        }
      },
      "TransactionResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id of transaction",
              "example": "62536hghgdhg"
            },
            "date": {
              "type": "string",
              "description": "Date of transaction",
              "example": "20.12.19"
            },
            "income": {
              "type": "boolean",
              "description": "Type of transaction",
              "example": false
            },
            "category": {
              "type": "string",
              "description": "Category of transaction",
              "example": "Products"
            },
            "comment": {
              "type": "string",
              "description": "Comment of transaction",
              "example": "Products for home"
            },
            "sum": {
              "type": "number",
              "description": "Sum of transaction",
              "example": 500
            },
            "user_balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 8500
            }
          }
        },
        "example": [
          {
            "transaction": {
              "_id": {
                "type": "string",
                "description": "Id of transaction",
                "example": "4trgtg454grg44"
              },
              "date": {
                "type": "string",
                "description": "Date of transaction",
                "example": "19.12.19"
              },
              "income": {
                "type": "boolean",
                "description": "Type of transaction",
                "example": false
              },
              "category": {
                "type": "string",
                "description": "Category of transaction",
                "example": "Products"
              },
              "comment": {
                "type": "string",
                "description": "Comment of transaction",
                "example": "Products for home"
              },
              "sum": {
                "type": "number",
                "description": "Sum of transaction",
                "example": 1500
              }
            },
            "user_balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 9000
            }
          },
          {
            "transaction": {
              "_id": {
                "type": "string",
                "description": "Id of transaction",
                "example": "62536hghgdhg"
              },
              "date": {
                "type": "string",
                "description": "Date of transaction",
                "example": "20.12.19"
              },
              "income": {
                "type": "boolean",
                "description": "Type of transaction",
                "example": false
              },
              "category": {
                "type": "string",
                "description": "Category of transaction",
                "example": "Products"
              },
              "comment": {
                "type": "string",
                "description": "Comment of transaction",
                "example": "Products for home"
              },
              "sum": {
                "type": "number",
                "description": "Sum of transaction",
                "example": 500
              }
            },
            "user_balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 8500
            }
          },
          {
            "transaction": {
              "_id": {
                "type": "string",
                "description": "Id of transaction",
                "example": "908989836hghgdhg"
              },
              "date": {
                "type": "string",
                "description": "Date of transaction",
                "example": "21.12.19"
              },
              "income": {
                "type": "boolean",
                "description": "Type of transaction",
                "example": true
              },
              "category": {
                "type": "string",
                "description": "Category of transaction",
                "example": "Kids"
              },
              "comment": {
                "type": "string",
                "description": "Comment of transaction",
                "example": "Toys"
              },
              "sum": {
                "type": "number",
                "description": "Sum of transaction",
                "example": 1000
              }
            },
            "user_balance": {
              "type": "number",
              "description": "Remaining balance",
              "example": 7500
            }
          }
        ]
      },
      "TransactionRequest": {
        "required": ["income", "sum", "datetime", "category"],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of transaction",
            "example": "20.12.19"
          },
          "income": {
            "type": "boolean",
            "description": "Type of transaction",
            "example": false
          },
          "category": {
            "type": "string",
            "description": "Category of transaction",
            "example": "Products"
          },
          "comment": {
            "type": "string",
            "description": "Comment of transaction",
            "example": "Products for home"
          },
          "sum": {
            "type": "number",
            "description": "Sum of transaction",
            "example": 500
          }
        }
      },
      "StatisticsResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "example": "An array of objects 'categoryPerMonth' with spend sum"
          },
          "total": {
            "type": "object",
            "properties": {
              "expense": {
                "type": "number",
                "example": 240000
              },
              "income": {
                "type": "Number",
                "example": 1400000
              }
            }
          }
        }
      },
      "CategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "example": "An array of objects 'categoryPerMonth' with spend sum"
          }
        },
        "example": {
          "categories": [
            "Еда",
            "Авто",
            "Развитие",
            "Дети",
            "Дом",
            "Образование",
            "Остальные",
            "Регулярный",
            "Нерегулярный"
          ]
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
